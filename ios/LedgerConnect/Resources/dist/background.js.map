{"mappings":"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","sources":["src/background.ts","src/content/use-case/dto/dapp-request.ts","src/library/ddd-core-objects/index.ts","src/library/ddd-core-objects/value-object.ts","node_modules/shallow-equal-object/lib/src/shallow-equal-object.js","node_modules/shallow-equal-object/src/shallow-equal-object.ts","src/messaging.ts","src/logging.ts"],"sourcesContent":["/* eslint-disable max-len */\nimport { EthereumMethod, SolanaMethod } from './content/use-case/dto/dapp-request';\nimport { sendNativeMessage, ExtensionComponent, ExtensionMessageRequest } from './messaging';\nimport { getLogger } from './logging';\n\nconst log = getLogger('background');\n\nbrowser.runtime.onMessage.addListener(async (request, sender): Promise<any> => {\n  log('Receive message', request, request.getValue, sender);\n\n  const message = request as ExtensionMessageRequest;\n\n  if (!message || message.destination !== ExtensionComponent.background) {\n    return undefined;\n  }\n\n  const { method, id } = message.request;\n\n  switch (method) {\n    case EthereumMethod.ConnectDapp: {\n      log('receive ETH request accounts', message.request);\n\n      const result = await sendNativeMessage(message.request);\n      log('request accounts result', result);\n\n      // await new Promise((resolve) => {\n      //   setTimeout(resolve, 3000);\n      // });\n\n      // const result = { id, value: ['0x51a4f8419aC902006211786a5648F0cc14aa7074'] };\n\n      return result;\n    }\n    case EthereumMethod.SignAndSendTransaction: {\n      log('receive ETH send transaction', message.request);\n\n      const result = await sendNativeMessage(message.request);\n      log('send transaction result', result);\n\n      await new Promise((resolve) => {\n        setTimeout(resolve, 4000);\n      });\n\n      // const result = {\n      //   id: 1648642005769,\n      //   method: 'eth_sendTransaction',\n      //   value:\n      //     '0x02f8d1030d8509427a0a60851284f4151482cf0894c778417e063141139fce010982780140aa0cd5ab80b86423b872dd000000000000000000000000ce7bae6d741abade3a7c03030cc37cf2ad0f19fe0000000000000000000000001600e1a05b4126ed0937f5e2d00f6171e359afba000000000000000000000000000000000000000000000000000009184e72a000c001a008a432ce2d7a19139324cfca7169b4e7b678e07cd6f61fc070290c3072286691a0121d9ee27c908182fb7a3e70935b3bc4285fc4241313810395fc7ae69500ac03',\n      // };\n\n      return result;\n    }\n    case EthereumMethod.SignPersonalMessage: {\n      log('receive ETH sign personal message', message.request);\n\n      const result = await sendNativeMessage(message.request);\n      log('send transaction result', result);\n\n      // await new Promise((resolve) => {\n      //   setTimeout(resolve, 4000);\n      // });\n\n      // const result = {\n      //   id,\n      //   value: '0x0c52dc17fbc8eafe95c9225484c2360c793296b43bbf7de5â€¦eca87419c9dbf5be5bdbfdad4a4f3cb6d8eeb8a7116bd4901',\n      // };\n\n      return result;\n    }\n    case SolanaMethod.ConnectDapp: {\n      log('receive SOL request accounts', message.request);\n\n      const result = await sendNativeMessage(message.request);\n      log('request accounts result', result);\n\n      // await new Promise((resolve) => {\n      //   setTimeout(resolve, 3000);\n      // });\n\n      // const result = { id, value: ['GxhLFJ7XoCoxLdcLBzvycknww3yqzBfDe5ra61EdUEAR'] };\n\n      return result;\n    }\n    case SolanaMethod.SignAndSendTransaction:\n    case SolanaMethod.SignTransaction:\n    case SolanaMethod.SignAllTransactions: {\n      log('receive SOL sign and send transaction', message.request);\n\n      const result = await sendNativeMessage(message.request);\n      log('solana sign transaction result', result);\n\n      // await new Promise((resolve) => {\n      //   setTimeout(resolve, 3000);\n      // });\n\n      // const result = {\n      //   value: '4a2AySzhrAxXoMqQZ1MvFZx7Fg9YuztXXyDtji54mijNNqJGaCrhGdeG8SxS4y2NFSX6HBzq2wJRnkxb3LeodSPg',\n      //   id,\n      // };\n\n      return result;\n    }\n    default:\n      log(`unexpected request method ${method}`);\n  }\n  return undefined;\n});\n\nlog(`loaded`);\n","import { ValueObject } from '../../../library/ddd-core-objects';\nimport { Chain } from '../../domain/chain';\nimport { EthereumPersonalMessage } from '../../domain/personal-message/ethereum';\nimport { EthereumTransactionRequest } from '../../domain/transaction/ethereum/ethereum-transaction-request';\nimport { SolanaTransactionRequest } from '../../domain/transaction/solana/solana-transaction-request';\n\nexport enum RequestType {\n  ConnectDapp = 'connectDapp',\n  SignAndSendTransaction = 'signAndSendTransaction',\n  SignTransaction = 'signTransaction',\n  SignPersonalMessage = 'signPersonalMessage',\n}\n\n/* Ethereum */\n\nexport enum EthereumMethod {\n  ConnectDapp = 'eth_requestAccounts',\n  SignAndSendTransaction = 'eth_sendTransaction',\n  SignPersonalMessage = 'signPersonalMessage',\n}\n\nexport type EthereumConnectDappDappRequestProps = {\n  id: number;\n  type: RequestType.ConnectDapp;\n  method: EthereumMethod.ConnectDapp;\n  payload: undefined;\n  chain: Chain.Ethereum;\n};\n\nexport type EthereumSignAndSendTransactionDappRequestProps = {\n  id: number;\n  type: RequestType.SignAndSendTransaction;\n  method: EthereumMethod.SignAndSendTransaction;\n  payload: EthereumTransactionRequest;\n  chain: Chain.Ethereum;\n};\n\nexport type EthereumSignPersonalMessageDappRequestProps = {\n  id: number;\n  type: RequestType.SignPersonalMessage;\n  method: EthereumMethod.SignPersonalMessage;\n  payload: EthereumPersonalMessage;\n  chain: Chain.Ethereum;\n};\n\n/* Solana */\n\nexport enum SolanaMethod {\n  ConnectDapp = 'solana_getAccount',\n  SignAndSendTransaction = 'solana_signAndSendTransaction',\n  SignTransaction = 'solana_signTransaction',\n  SignAllTransactions = 'solana_signAllTransactions',\n}\n\nexport type SolanaConnectDappDappRequestProps = {\n  id: number;\n  type: RequestType.ConnectDapp;\n  method: SolanaMethod.ConnectDapp;\n  payload: undefined;\n  chain: Chain.Solana;\n};\n\nexport type SolanaSignAndSendTransactionDappRequestProps = {\n  id: number;\n  type: RequestType.SignAndSendTransaction;\n  method: SolanaMethod.SignAndSendTransaction;\n  payload: SolanaTransactionRequest;\n  chain: Chain.Solana;\n};\n\nexport type SolanaSignTransactionDappRequestProps = {\n  id: number;\n  type: RequestType.SignTransaction;\n  method: SolanaMethod.SignTransaction;\n  payload: SolanaTransactionRequest;\n  chain: Chain.Solana;\n};\n\nexport type SolanaSignAllTransactionsDappRequestProps = {\n  id: number;\n  type: RequestType.SignTransaction;\n  method: SolanaMethod.SignAllTransactions;\n  payload: SolanaTransactionRequest;\n  chain: Chain.Solana;\n};\n\nexport type DappRequestProps =\n  | EthereumConnectDappDappRequestProps\n  | EthereumSignAndSendTransactionDappRequestProps\n  | EthereumSignPersonalMessageDappRequestProps\n  | SolanaConnectDappDappRequestProps\n  | SolanaSignAndSendTransactionDappRequestProps\n  | SolanaSignTransactionDappRequestProps\n  | SolanaSignAllTransactionsDappRequestProps;\n\nexport class DappRequest<Props extends DappRequestProps = DappRequestProps> extends ValueObject<Props> {\n  public getID(): number {\n    return this.props.id;\n  }\n\n  public getType(): RequestType {\n    return this.props.type;\n  }\n\n  public getMethod(): Props['method'] {\n    return this.props.method;\n  }\n\n  public getPayload(): Props['payload'] {\n    return this.props.payload;\n  }\n\n  public getChain(): Chain {\n    return this.props.chain;\n  }\n\n  public static create<Props extends DappRequestProps>(props: Props): DappRequest<Props> {\n    return new DappRequest(props);\n  }\n}\n","export { ValueObject } from './value-object';\nexport { type UseCase } from './use-case';\nexport { type Map } from './map';\n","import { shallowEqual } from 'shallow-equal-object';\n\nexport interface ValueObjectProps<T = any> {\n  [index: string]: T;\n}\n\n/**\n * @desc ValueObjects are objects that we determine their\n * equality through their structrual property.\n */\n\nexport abstract class ValueObject<T extends ValueObjectProps> {\n  public readonly props: T;\n\n  constructor(props: T) {\n    this.props = Object.freeze(props);\n  }\n\n  public equals(vo?: ValueObject<T>): boolean {\n    if (vo === null || vo === undefined) {\n      return false;\n    }\n    if (vo.props === undefined) {\n      return false;\n    }\n    return shallowEqual(this.props, vo.props);\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// MIT Â© 2017 azu\nvar hasOwn = Object.prototype.hasOwnProperty;\n// Object.is ponyfill\nexports.is = function (x, y) {\n    if (x === y) {\n        return x !== 0 || y !== 0 || 1 / x === 1 / y;\n    }\n    else {\n        return x !== x && y !== y;\n    }\n};\n/**\n * Return true, if `objectA` is shallow equal to `objectB`.\n * Pass Custom equality function to `customEqual`.\n * Default equality is `Object.is`\n *\n * Options:\n *\n * - `customEqual`: function should return true if the `a` value is equal to `b` value.\n * - `debug`: enable debug info to console log. This log will be disable in production build\n */\nexports.shallowEqual = function (objectA, objectB, options) {\n    if (objectA === objectB) {\n        return true;\n    }\n    if (typeof objectA !== \"object\" || objectA === null) {\n        if (process.env.NODE_ENV !== \"production\" && options && options.debug) {\n            var out = options.console || console;\n            out.group(\"shallow-equal-object\");\n            out.log(\"objectA is not object.\");\n            out.log(\"objectA\", objectA);\n            out.log(\"objectB\", objectB);\n            out.groupEnd();\n        }\n        return false;\n    }\n    if (typeof objectB !== \"object\" || objectB === null) {\n        if (process.env.NODE_ENV !== \"production\" && options && options.debug) {\n            var out = options.console || console;\n            out.group(\"shallow-equal-object\");\n            out.log(\"objectB is not object.\");\n            out.log(\"objectA\", objectA);\n            out.log(\"objectB\", objectB);\n            out.groupEnd();\n        }\n        return false;\n    }\n    var keysA = Object.keys(objectA);\n    var keysB = Object.keys(objectB);\n    if (keysA.length !== keysB.length) {\n        if (process.env.NODE_ENV !== \"production\" && options && options.debug) {\n            var out = options.console || console;\n            out.group(\"shallow-equal-object\");\n            out.log(\"object key length is not same\");\n            out.log(\"objectA\", objectA);\n            out.log(\"objectB\", objectB);\n            out.groupEnd();\n        }\n        return false;\n    }\n    var isEqual = options && typeof options.customEqual === \"function\" ? options.customEqual : exports.is;\n    for (var i = 0; i < keysA.length; i++) {\n        var key = keysA[i];\n        if (!hasOwn.call(objectB, key) || !isEqual(objectA[key], objectB[key])) {\n            if (process.env.NODE_ENV !== \"production\" && options && options.debug) {\n                var out = options.console || console;\n                out.group(\"shallow-equal-object\");\n                out.log(\"key:\" + key + \" is not equals between A and B.\");\n                out.log(\"objectA[\" + key + \"]:\", objectA[key]);\n                out.log(\"objectB[\" + key + \"]:\", objectB[key]);\n                out.log(\"objectA\", objectA);\n                out.log(\"objectB\", objectB);\n                out.groupEnd();\n            }\n            return false;\n        }\n    }\n    return true;\n};\n//# sourceMappingURL=shallow-equal-object.js.map","// MIT Â© 2017 azu\nconst hasOwn = Object.prototype.hasOwnProperty;\n// Object.is ponyfill\nexport const is = (x: any, y: any): boolean => {\n    if (x === y) {\n        return x !== 0 || y !== 0 || 1 / x === 1 / y;\n    } else {\n        return x !== x && y !== y;\n    }\n};\n/**\n * Return true, if `objectA` is shallow equal to `objectB`.\n * Pass Custom equality function to `customEqual`.\n * Default equality is `Object.is`\n *\n * Options:\n *\n * - `customEqual`: function should return true if the `a` value is equal to `b` value.\n * - `debug`: enable debug info to console log. This log will be disable in production build\n */\nexport const shallowEqual = (\n    objectA: any,\n    objectB: any,\n    options?: {\n        customEqual?: <T>(a: T, b: T) => boolean;\n        // debug options available in development build\n        debug?: true;\n        console?: Pick<Console, \"log\" | \"group\" | \"groupEnd\">;\n    }\n): boolean => {\n    if (objectA === objectB) {\n        return true;\n    }\n    if (typeof objectA !== \"object\" || objectA === null) {\n        if (process.env.NODE_ENV !== \"production\" && options && options.debug) {\n            const out = options.console || console;\n            out.group(`shallow-equal-object`);\n            out.log(\"objectA is not object.\");\n            out.log(\"objectA\", objectA);\n            out.log(\"objectB\", objectB);\n            out.groupEnd();\n        }\n        return false;\n    }\n    if (typeof objectB !== \"object\" || objectB === null) {\n        if (process.env.NODE_ENV !== \"production\" && options && options.debug) {\n            const out = options.console || console;\n            out.group(`shallow-equal-object`);\n            out.log(\"objectB is not object.\");\n            out.log(\"objectA\", objectA);\n            out.log(\"objectB\", objectB);\n            out.groupEnd();\n        }\n        return false;\n    }\n\n    const keysA = Object.keys(objectA);\n    const keysB = Object.keys(objectB);\n\n    if (keysA.length !== keysB.length) {\n        if (process.env.NODE_ENV !== \"production\" && options && options.debug) {\n            const out = options.console || console;\n            out.group(`shallow-equal-object`);\n            out.log(\"object key length is not same\");\n            out.log(\"objectA\", objectA);\n            out.log(\"objectB\", objectB);\n            out.groupEnd();\n        }\n        return false;\n    }\n\n    const isEqual = options && typeof options.customEqual === \"function\" ? options.customEqual : is;\n\n    for (let i = 0; i < keysA.length; i++) {\n        const key = keysA[i];\n        if (!hasOwn.call(objectB, key) || !isEqual(objectA[key], objectB[key])) {\n            if (process.env.NODE_ENV !== \"production\" && options && options.debug) {\n                const out = options.console || console;\n                out.group(`shallow-equal-object`);\n                out.log(`key:${key} is not equals between A and B.`);\n                out.log(`objectA[${key}]:`, objectA[key]);\n                out.log(`objectB[${key}]:`, objectB[key]);\n                out.log(\"objectA\", objectA);\n                out.log(\"objectB\", objectB);\n                out.groupEnd();\n            }\n            return false;\n        }\n    }\n\n    return true;\n};\n","import { RawDappRequestDTO } from './content/external/maps/dto/dapp-request-map';\nimport { RawDappResponseDTO } from './content/external/maps/dto/dapp-response-map';\n\nexport enum ExtensionComponent {\n  solana = 'solana',\n  ethereum = 'ethereum',\n  content = 'content',\n  background = 'background',\n  popup = 'popup',\n}\n\nexport type MethodRequest = {\n  id: number;\n  type: string;\n  method: string;\n  chain: string;\n  payload: any;\n};\n\nexport type MethodResponse = {\n  id: number;\n  type: string;\n  method: string;\n  chain: string;\n  payload: any;\n};\n\nexport type ExtensionMessageRequest = {\n  sender: ExtensionComponent;\n  destination: ExtensionComponent;\n  request: MethodRequest | RawDappRequestDTO;\n};\n\nexport type ExtensionMessageResponse = {\n  sender: ExtensionComponent;\n  destination: ExtensionComponent;\n  response: MethodResponse | RawDappResponseDTO;\n};\n\nexport async function sendNativeMessage(message: MethodRequest): Promise<any> {\n  try {\n    return browser.runtime.sendNativeMessage('application.id', message);\n  } catch (error) {\n    const errorMessage = error instanceof Error ? error.message : error;\n    console.error('Caught error in backend messaging', errorMessage);\n    return { ...message, error: errorMessage };\n  }\n}\n\nexport function sendContentMessage(request: MethodRequest) {\n  let message: ExtensionMessageRequest = {\n    sender: ExtensionComponent.popup,\n    destination: ExtensionComponent.content,\n    request: request,\n  };\n\n  (browser.tabs as any).query(\n    {\n      active: true,\n      currentWindow: true,\n    },\n    (tabs: browser.tabs.Tab[]) => {\n      const [tab] = tabs;\n      if (tab && tab.id) {\n        browser.tabs.sendMessage(tab.id, message);\n      }\n    },\n  );\n}\n","export type Logger = (message: string, ...others: any[]) => void;\n\nexport const getLogger =\n  (fileName: string): Logger =>\n  (message: string, ...others: any[]) => {\n    console.log(`[${fileName}.js] ${message}`, ...others);\n  };\n\nexport const getErrorLogger =\n  (fileName: string): Logger =>\n  (message: string, ...others: any[]) =>\n    console.error(`[${fileName}.js] ${message}`, ...others);\n\n"],"names":[],"version":3,"file":"background.js.map"}