require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

flipperkit_version = '0.111.0'

target 'ledgerlivemobile' do
  platform :ios, '12.0'

  use_expo_modules!
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => false
  )

  pod 'djinni_objc', :path => '../node_modules/@ledgerhq/react-native-ledger-core'
  pod 'ledger-core-objc', :path => '../node_modules/@ledgerhq/react-native-ledger-core'
  pod 'RNLibLedgerCore', :path => '../node_modules/@ledgerhq/react-native-ledger-core'

  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text', :modular_headers => true

  target 'ledgerlivemobileTests' do
    inherit! :search_paths
    # Pods for testing
  end

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
  use_flipper!() # should match the version of your Flipper client app

end

target 'LedgerConnect Extension (iOS)' do
  # The extension actually has a minimum deployment target of 15.4, but RN doesn't
  # seem to handle mixed platform versions across targets very well.
  platform :ios, '12.0'

  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => false
  )

  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text', :modular_headers => true
end

post_install do |installer|
  react_native_post_install(installer)
  flipper_post_install(installer)
  __apply_Xcode_12_5_M1_post_install_workaround(installer)

  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'No'
    end
  end
end
